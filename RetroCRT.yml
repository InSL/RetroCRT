---

##############################################################################
# This file is part of RetroCRT (https://github.com/xovox/RetroCRT)
#
# RetroCRT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# RetroCRT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with RetroCRT.  If not, see <https://www.gnu.org/licenses/>.
##############################################################################

- hosts: "all"
  connection: "local"
  become: "yes"
  become_user: "root"

  handlers:

    - name: "Install Updated /boot Configs"
      copy:
        src: "/{{ item }}"
        dest: "/boot/{{ item }}"
      with_items:
        - "cmdline.txt"
        - "config.txt"
      listen: "copyboot"

  pre_tasks:

    - name: "Reading Configs"
      set_fact:
        tv_region: "{{ lookup('env', 'tv_region') }}"
        retrocrt_timings: "{{ lookup('env', 'retrocrt_timings') }}"
        rotate_tv: "{{ lookup('env', 'rotate_tv') }}"
        rotate_es: "{{ lookup('env', 'rotate_es') }}"
        rotate_ra: "{{ lookup('env', 'rotate_ra') }}"

    - name: "Set Default Timings"
      set_fact:
        default_timings: "{{ lookup('file', '{{ retrocrt_timings }}/default') }}"
        
    - name: "Find / UUID"
      command: "findmnt --noheadings --output PARTUUID /"
      register: root_uuid

    - name: "Find / Filesystem Type"
      command: "findmnt --noheadings --output FSTYPE /"
      register: root_fstype

  tasks:

    - name: "Update /boot Configs"
      template:
        src: "templates/{{ item }}.j2"
        dest: "/{{ item }}"
      with_items:
        - "cmdline.txt"
        - "config.txt"
      notify: "copyboot"

    - name: "Update EmulationStation Startup"
      template:
        src: "templates/autostart.sh.j2"
        dest: "/opt/retropie/configs/all/autostart.sh"

    - name: "Menu Item"
      copy:
        src: "bin/RetroCRT.sh"
        dest: "/home/pi/RetroPie/retropiemenu/RetroCRT.sh"
        mode: 0755
        owner: "pi"
        group: "pi"

    - name: "Menu Item Icon"
      copy:
        src: "files/RetroCRT.png"
        dest: "/home/pi/RetroPie/retropiemenu/icons/RetroCRT.png"
        mode: 0644
        owner: "pi"
        group: "pi"

    - name: "Copy RetroArch Configs"
      synchronize:
        src: "configs/retropie/"
        dest: "/opt/retropie/configs/"
        rsync_opts:
          - "--backup"
          - "--suffix .{{ansible_date_time.epoch}}"

    - name: "Copy On Start/End Scripts"
      synchronize:
        src: "files/{{ item }}/"
        dest: '/home/pi/RetroPie/{{ item }}/'
        rsync_opts:
          - "--backup"
          - "--suffix .{{ansible_date_time.epoch}}"
      with_items:
        - "runcommand-onstart.d"
        - "runcommand-onend.d"

    - name: "Disable RetroArch Notifications"
      lineinfile:
        dest: "/opt/retropie/configs/all/retroarch.cfg"
        backup: "yes"
        regexp: '^video_font_enable ='
        line: 'video_font_enable = "false"'

    - name: "Check State of Test ROMS"
      stat:
        path: "/home/pi/RetroPie/roms/.240p_copied"
      register: roms_copied

    - name: "240p Test Suite"
      synchronize:
        src: "files/roms/"
        dest: "/home/pi/RetroPie/roms/"
        rsync_opts:
          - "--exclude README.md"
      when: roms_copied.stat.exists == False

    - name: "Theme: Delete Carbon"
      file:
        path: "/etc/emulationstation/themes/carbon"
        state: "absent"

    - name: "Theme: Install GBZ35 Dark"
      git:
        depth: 1
        repo: "https://github.com/rxbrad/es-theme-gbz35-dark"
        dest: "/etc/emulationstation/themes/GBZ35-Dark"

    - name: "Fix Permissions"
      file:
        path: "{{ item }}"
        state: "directory"
        owner: "pi"
        group: "pi"
        recurse: "yes"
      with_items:
        - "/opt/retropie"
        - "/home/pi"
